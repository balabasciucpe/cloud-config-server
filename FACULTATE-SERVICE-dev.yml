resilience4j.circuitbreaker:
instances:
 getDefaultEntity: #numele din CircuitBreaker
registerHealthIndicator: true # Parameter that indicates if we want to expose the configuration over the health endpoint
ringBufferSizeInClosedState: 5 #Sets the ring buffer size at the closed state
ringBufferSizeInHalfOpenState: 3 #Sets the ring buffer size in the half-open state
waitDurationInOpenState: 10s #Sets the wait duration in the open state.
failureRateThreshold: 5 #Sets the failure rate threshold percentage - adica cate fail-uri sa avem inainte sa deschida CircuitBreakerul
recordExceptions: #Set the exceptions that should be recorded as failure
- org.springframework.web.client.HttpServerErrorException
- java.io.IOException
- java.util.concurrent.TimeoutException
- org.springframework.web.client.ResourceAccessException
 organizationService: #Alt Serviciu, alta metodaName anotata cu CircuitBreaket, ca mai sus
registerHealthIndicator: true
ringBufferSizeInClosedState: 6
ringBufferSizeInHalfOpenState: 4
waitDurationInOpenState: 20s
failureRateThreshold: 60
